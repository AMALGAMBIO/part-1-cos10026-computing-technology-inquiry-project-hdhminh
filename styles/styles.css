/*apply page css*/

/*global varible for apply page*/
:root {
  --mainColor: #1d1d1d;
  --textColor: #fff8e8;
  --backgroundColor: #000000;
  --borderColor: #00cc99;
  --gradientStart: #00cc99;
  --gradientEnd: #00b386;
}
/*global style*/
.applypage {
  font-family: "Inter", Arial, sans-serif;
  background: linear-gradient(135deg, var(--backgroundColor), #111);
  margin: 0;
  padding: 20px;
  color: var(--textColor);
  min-height: 100vh;
  transition: all 0.4s ease-in-out;
}

/* Navigation Bar */
.applypage .navbar {
  position: absolute;
  top: 20px;
  right: 20px;
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 15px;
  background: rgba(0, 0, 0, 0.7);
  border-radius: 8px;
  font-size: 20px;
}

.applypage .navbar a {
  color: white;
  text-decoration: none;
  font-size: 20px;
  font-weight: 600;
  padding: 5px;
  border-radius: 8px;
  transition: all 0.3s ease;
  position: relative;
}
.applypage .navbar a::after {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 50%;
  width: 0;
  height: 2px;
  background-color: #00cc99;
  transition: all 0.3s ease;
  transform: translateX(-50%);
}

.applypage .navbar a:hover {
  color: #00cc99;
}
.applypage .navbar a:hover::after {
  width: 100%;
}

.applypage .navbar .icon {
  margin-top: 4px;
}

/*h1*/
.applypage h1 {
  text-align: center;
  color: var(--textColor);
}

/*form*/
.applypage form {
  max-width: 800px;
  margin: 40px auto;
  display: flex;
  flex-direction: column;
  gap: 20px;
}
/*animated border*/
.animatedborders {
  position: relative;
  padding: 3px;
  border-radius: 20px;
  overflow: hidden;
  margin-bottom: 32px;
  z-index: 0;
}

.animatedborders::before {
  content: "";
  position: absolute;
  top: 15%;
  left: -50%;
  width: 100%;
  height: 40%;
  background-color: transparent;
  z-index: 1;
}

.animatedborders:focus-within::before {
  content: "";
  position: absolute;
  top: 15%;
  left: -50%;
  width: 100%;
  height: 40%;
  background: linear-gradient(
    0deg,
    transparent,
    transparent,
    var(--borderColor),
    var(--borderColor),
    var(--borderColor)
  );
  animation: rotateBorders 6s linear infinite;
  transform-origin: bottom right;
  z-index: -1;
}

@keyframes rotateBorders {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(90deg);
  }
  50% {
    transform: rotate(180deg);
  }
  75% {
    transform: rotate(270deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.applypage fieldset {
  background-color: rgba(0, 0, 0, 1);
  backdrop-filter: blur(10px);
  border-radius: 12px;
  padding: 32px;
  margin: 0;
  position: relative;
  transition: all 0.3s ease-in-out;
  transform: scale(0.98);
  border: 2px solid var(--borderColor);
  transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
  box-shadow: 0 5px 25px rgba(0, 255, 150, 0.3);
}

.applypage fieldset:hover {
  transform: translateY(-5px);
  box-shadow: 0 12px 40px var(--shadowColor);
}

.applypage fieldset legend {
  padding: 8px 20px;
  margin-left: 20px;
  background: linear-gradient(135deg, var(--gradientStart), var(--gradientEnd));
  border: 2px solid var(--borderColor);
  border-radius: 8px;
  font-size: 20px;
  font-weight: bold;
  transition: all 0.4s ease;
}

.applypage fieldset input {
  width: 80%;
  max-width: 700px;
}

.applypage fieldset:focus-within {
  transform: scale(1);
  background-color: var(--mainColor);
  border: none;
}
.applypage fieldset:focus-within legend {
  opacity: 1;
  height: 0;
  visibility: show;
  margin: 0;
  padding: 0;
  padding-top: 2px;
}

.applypage .form-group {
  margin-bottom: 1rem;
}

.applypage label {
  display: block;
  margin-bottom: 0.5rem;
  color: var(--textColor);
  font-weight: 500;
}

.applypage .game-info {
  display: flex;
  margin-left: 10px;
  justify-content: space-between;
  font-size: 1.1rem;
  margin-top: -15px;
}

/* Gender label styling */
.applypage label[for="gender"] {
  display: block;
  margin-bottom: 12px;
  font-size: 18px;
  color: var(--textColor);
  font-weight: 500;
}

/* Gender options container */
.applypage .gender-options {
  display: flex;
  gap: 20px;
  margin-top: 10px;
}

/* Individual radio option styling */
.applypage .gender-options label {
  position: relative;
  display: flex;
  align-items: center;
  padding: 12px;
  border-radius: 10px;
  transition: all 0.3s ease;
  cursor: pointer;
  font-size: 16px;
  color: var(--textColor);
  padding-left: 45px;
}

.applypage .gender-options label:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateX(10px);
}

/* Hide default radio button */
.applypage .gender-options input[type="radio"] {
  position: absolute;
  opacity: 0;
  width: auto;
  height: auto;
  margin: 0;
  cursor: pointer;
  z-index: 2;
}

/* Custom radio button appearance */
.applypage .gender-options label:before {
  content: "";
  position: absolute;
  left: 12px;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
  border: 2px solid var(--borderColor);
  border-radius: 50%;
  transition: all 0.3s ease;
  z-index: 1;
}

/* Radio button center dot */
.applypage .gender-options label:after {
  content: "";
  position: absolute;
  left: 20px;
  top: 50%;
  width: 12px;
  height: 12px;
  background-color: var(--backgroundColor);
  border-radius: 50%;
  transform: translateY(-50%) scale(0);
  transition: all 0.2s ease;
  z-index: 1;
}

/* Checked state */
.applypage .gender-options input[type="radio"]:checked + label:before {
  background-color: var(--borderColor);
}

.applypage .gender-options input[type="radio"]:checked + label:after {
  transform: translateY(-50%) scale(1);
}

/* Animation for the radio when checking */
@keyframes radioScale {
  0% {
    transform: translateY(-50%) scale(1);
  }
  50% {
    transform: translateY(-50%) scale(0.9);
  }
  100% {
    transform: translateY(-50%) scale(1);
  }
}

.applypage .gender-options input[type="radio"]:checked + label:before {
  animation: radioScale 0.3s ease-in-out;
}

.applypage #State option[value=""][disabled] {
  color: var(--textColor);
  background-color: var(--backgroundColor);
}

.applypage #State option {
  color: var(--textColor);
  background-color: var(--backgroundColor);
}

.applypage #State {
  background-color: rgba(255, 255, 255, 0.05);
  color: var(--textColor);
  padding: 10px;
  border: none;
  font-size: 16px;
}

.applypage input[type="text"],
.applypage input[type="email"],
.applypage select,
.applypage textarea {
  width: 100%;
  padding: 12px 16px;
  background: rgba(255, 255, 255, 0.05);
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  font-size: 20px;
  color: var(--textColor);
  transition: all 0.3s ease;
}

.applypage input[type="text"]:focus,
.applypage input[type="email"]:focus,
.applypage select:focus,
.applypage textarea:focus {
  outline: none;
  border-color: var(--borderColor);
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0 0 15px var(--borderColor);
  transform: translateY(-2px);
  transition: all 0.3s ease;
}

/* Skills Section Container */
.applypage .skills-section {
  position: relative;
  margin: 20px 0;
}

/* Make the entire skill item clickable */
.applypage .skill-item {
  position: relative;
  display: flex;
  align-items: center;
  margin: 16px 0;
  padding: 12px;
  border-radius: 10px;
  transition: all 0.3s ease;
  background: rgba(255, 255, 255, 0.05);
  cursor: pointer; /* Make the whole area show pointer cursor */
}

/* The actual checkbox input */
.applypage .skill-item input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 100%; /* Expand to full container width */
  height: 100%; /* Expand to full container height */
  left: 0;
  top: 0;
  margin: 0;
  cursor: pointer;
  z-index: 3; /* Ensure it's on top */
}

/* Label styling */
.applypage .skill-item label {
  position: relative;
  display: flex;
  align-items: center;
  cursor: pointer;
  font-size: 16px;
  color: var(--textColor);
  font-weight: 500;
  width: 100%;
  padding-left: 45px;
  z-index: 1;
  pointer-events: none; /* Prevent label from blocking checkbox clicks */
}

/* Custom checkbox appearance */
.applypage .skill-item label:before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
  border: 2px solid var(--borderColor);
  border-radius: 6px;
  background-color: transparent;
  transition: all 0.3s ease;
  z-index: 1;
  pointer-events: none;
}

/* Checkmark */
.applypage .skill-item label:after {
  content: "";
  position: absolute;
  left: 9px;
  top: 50%;
  width: 6px;
  height: 12px;
  border: solid var(--backgroundColor);
  border-width: 0 2px 2px 0;
  transform: translateY(-70%) rotate(45deg);
  opacity: 0;
  transition: all 0.2s ease;
  z-index: 1;
  pointer-events: none;
}

/* Checked state */
.applypage .skill-item input[type="checkbox"]:checked + label:before {
  background-color: var(--borderColor);
}

.applypage .skill-item input[type="checkbox"]:checked + label:after {
  opacity: 1;
}

/* Hover effect */
.applypage .skill-item:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateX(10px);
}

.applypage .skill-item:hover label:before {
  border-color: var(--gradientEnd);
  box-shadow: 0 0 10px rgba(0, 204, 153, 0.3);
}

/* Animation for the checkbox when checking */
@keyframes checkScale {
  0% {
    transform: translateY(-50%) scale(1);
  }
  50% {
    transform: translateY(-50%) scale(0.9);
  }
  100% {
    transform: translateY(-50%) scale(1);
  }
}

.applypage .skill-item input[type="checkbox"]:checked + label:before {
  animation: checkScale 0.3s ease-in-out;
}

.applypage .other-skills textarea {
  max-width: 700px;
}

.applypage input[type="submit"],
.applypage input[type="reset"] {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 6px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.3s;
}

.applypage input[type="submit"]::before,
.applypage input[type="reset"]::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width 0.6s ease, height 0.6s ease;
  z-index: -1;
}

.applypage input[type="submit"]:hover::before,
.applypage input[type="reset"]:hover::before {
  width: 300px;
  height: 300px;
}

.applypage input[type="submit"] {
  background-color: var(--borderColor);
  color: white;
}

.applypage input[type="submit"]:hover {
  background-color: var(--mainColor);
}

.applypage input[type="reset"] {
  background-color: var(--borderColor);
  color: var(--textColor);
}

.applypage input[type="reset"]:hover {
  background-color: var(--mainColor);
}

.applypage input:required {
  border-left: 3px solid var(--mainColor);
}

.applypage input:invalid {
  border-color: var(--mainColor);
}

/* Media queries */
@media (max-width: 768px) {
  .applypage {
    padding: 1rem;
  }

  .applypage fieldset {
    padding: 1.5rem;
  }

  .applypage .radio-group {
    flex-direction: column;
    gap: 0.75rem;
  }

  .applypage .button-group {
    flex-direction: column;
  }

  .applypage input[type="submit"],
  .applypage input[type="reset"] {
    width: 100%;
  }
}
